/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Psi,
  ERC721PsiInterface,
} from "../../../erc721psi/contracts/ERC721Psi";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aaf38038062001aaf83398101604081905262000034916200011f565b600162000042838262000218565b50600262000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6117bb80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb4651461020e578063b88d4fde14610221578063c87b56dd14610234578063e985e9c51461024757600080fd5b80634f6ccce7146101cd5780636352211e146101e057806370a08231146101f357806395d89b411461020657600080fd5b806318160ddd116100d357806318160ddd1461018257806323b872dd146101945780632f745c59146101a757806342842e0e146101ba57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b6101186101133660046111d9565b610283565b60405190151581526020015b60405180910390f35b6101356102f0565b6040516101249190611246565b610155610150366004611259565b610382565b6040516001600160a01b039091168152602001610124565b61018061017b36600461128e565b610414565b005b6004545b604051908152602001610124565b6101806101a23660046112b8565b61052b565b6101866101b536600461128e565b61055c565b6101806101c83660046112b8565b610626565b6101866101db366004611259565b610641565b6101556101ee366004611259565b6106fb565b6101866102013660046112f4565b61070f565b6101356107df565b61018061021c36600461130f565b6107ee565b61018061022f366004611361565b6108b2565b610135610242366004611259565b6108ea565b61011861025536600461143d565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102b457506001600160e01b03198216635b5e139f60e01b145b806102cf57506001600160e01b0319821663780e9d6360e01b145b806102ea57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546102ff90611470565b80601f016020809104026020016040519081016040528092919081815260200182805461032b90611470565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050905090565b600061038f826004541190565b6103f85760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a20617070726f76656420717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061041f826106fb565b9050806001600160a01b0316836001600160a01b03160361048e5760405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a20617070726f76616c20746f2063757272656e74206f6044820152633bb732b960e11b60648201526084016103ef565b336001600160a01b03821614806104aa57506104aa8133610255565b61051c5760405162461bcd60e51b815260206004820152603b60248201527f4552433732315073693a20617070726f76652063616c6c6572206973206e6f7460448201527f206f776e6572206e6f7220617070726f76656420666f7220616c6c000000000060648201526084016103ef565b61052683836109bf565b505050565b6105353382610a2d565b6105515760405162461bcd60e51b81526004016103ef906114aa565b610526838383610b1c565b60008060005b6004548110156105d157610577816004541190565b801561059c5750610587816106fb565b6001600160a01b0316856001600160a01b0316145b156105bf578382036105b15791506102ea9050565b816105bb81611514565b9250505b806105c981611514565b915050610562565b5060405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a206f776e657220696e646578206f7574206f6620626f604482015263756e647360e01b60648201526084016103ef565b610526838383604051806020016040528060008152506108b2565b600061064c60045490565b82106106a85760405162461bcd60e51b815260206004820152602560248201527f4552433732315073693a20676c6f62616c20696e646578206f7574206f6620626044820152646f756e647360d81b60648201526084016103ef565b6000805b6004548110156106f4576106c1816004541190565b156106e2578382036106d4579392505050565b816106de81611514565b9250505b806106ec81611514565b9150506106ac565b5050919050565b60008061070783610d08565b509392505050565b60006001600160a01b03821661077d5760405162461bcd60e51b815260206004820152602d60248201527f4552433732315073693a2062616c616e636520717565727920666f722074686560448201526c207a65726f206164647265737360981b60648201526084016103ef565b6000805b6004548110156107d857610796816004541190565b156107c8576107a4816106fb565b6001600160a01b0316846001600160a01b0316036107c8576107c582611514565b91505b6107d181611514565b9050610781565b5092915050565b6060600280546102ff90611470565b336001600160a01b038316036108465760405162461bcd60e51b815260206004820152601c60248201527f4552433732315073693a20617070726f766520746f2063616c6c65720000000060448201526064016103ef565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108bc3383610a2d565b6108d85760405162461bcd60e51b81526004016103ef906114aa565b6108e484848484610da1565b50505050565b60606108f7826004541190565b6109565760405162461bcd60e51b815260206004820152602a60248201527f4552433732315073693a2055524920717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b60648201526084016103ef565b600061096d60408051602081019091526000815290565b9050600081511161098d57604051806020016040528060008152506109b8565b8061099784610dd6565b6040516020016109a892919061152d565b6040516020818303038152906040525b9392505050565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109f4826106fb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a3a826004541190565b610a9e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a206f70657261746f7220717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103ef565b6000610aa9836106fb565b9050806001600160a01b0316846001600160a01b03161480610ae45750836001600160a01b0316610ad984610382565b6001600160a01b0316145b80610b1457506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b600080610b2883610d08565b91509150846001600160a01b0316826001600160a01b031614610ba25760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a207472616e73666572206f6620746f6b656e2074686160448201526b3a1034b9903737ba1037bbb760a11b60648201526084016103ef565b6001600160a01b038416610c085760405162461bcd60e51b815260206004820152602760248201527f4552433732315073693a207472616e7366657220746f20746865207a65726f206044820152666164647265737360c81b60648201526084016103ef565b610c136000846109bf565b6000610c2084600161155c565b600881901c600090815260208190526040902054909150600160ff1b60ff83161c16158015610c50575060045481105b15610c8657600081815260036020526040812080546001600160a01b0319166001600160a01b038916179055610c869082610ed7565b600084815260036020526040902080546001600160a01b0319166001600160a01b038716179055818414610cbf57610cbf600085610ed7565b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b600080610d16836004541190565b610d775760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a206f776e657220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103ef565b610d8083610f03565b6000818152600360205260409020546001600160a01b031694909350915050565b610dac848484610b1c565b610dba848484600185610f0f565b6108e45760405162461bcd60e51b81526004016103ef9061156f565b606081600003610dfd5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610e275780610e1181611514565b9150610e209050600a836115da565b9150610e01565b60008167ffffffffffffffff811115610e4257610e4261134b565b6040519080825280601f01601f191660200182016040528015610e6c576020820181803683370190505b5090505b8415610b1457610e816001836115ee565b9150610e8e600a86611601565b610e9990603061155c565b60f81b818381518110610eae57610eae611615565b60200101906001600160f81b031916908160001a905350610ed0600a866115da565b9450610e70565b600881901c600090815260209290925260409091208054600160ff1b60ff9093169290921c9091179055565b60006102ea8183611046565b60006001600160a01b0385163b1561103957506001835b610f30848661155c565b81101561103357604051630a85bd0160e11b81526001600160a01b0387169063150b7a0290610f699033908b908690899060040161162b565b6020604051808303816000875af1925050508015610fa4575060408051601f3d908101601f19168201909252610fa191810190611668565b60015b611001573d808015610fd2576040519150601f19603f3d011682016040523d82523d6000602084013e610fd7565b606091505b508051600003610ff95760405162461bcd60e51b81526004016103ef9061156f565b805181602001fd5b82801561101e57506001600160e01b03198116630a85bd0160e11b145b9250508061102b81611514565b915050610f26565b5061103d565b5060015b95945050505050565b600881901c60008181526020849052604081205490919060ff808516919082181c8015611088576110768161113e565b60ff168203600884901b179350611135565b600083116110f55760405162461bcd60e51b815260206004820152603460248201527f4269744d6170733a205468652073657420626974206265666f7265207468652060448201527334b73232bc103237b2b9b713ba1032bc34b9ba1760611b60648201526084016103ef565b5060001990910160008181526020869052604090205490919080156111305761111d8161113e565b60ff0360ff16600884901b179350611135565b611088565b50505092915050565b60006040518061012001604052806101008152602001611686610100913960f87e818283848586878898a8b8c8d8e8f929395969799a9b9d9e9faaeb6bedeeff611187856111a8565b02901c8151811061119a5761119a611615565b016020015160f81c92915050565b60008082116111b657600080fd5b5060008190031690565b6001600160e01b0319811681146111d657600080fd5b50565b6000602082840312156111eb57600080fd5b81356109b8816111c0565b60005b838110156112115781810151838201526020016111f9565b50506000910152565b600081518084526112328160208601602086016111f6565b601f01601f19169290920160200192915050565b6020815260006109b8602083018461121a565b60006020828403121561126b57600080fd5b5035919050565b80356001600160a01b038116811461128957600080fd5b919050565b600080604083850312156112a157600080fd5b6112aa83611272565b946020939093013593505050565b6000806000606084860312156112cd57600080fd5b6112d684611272565b92506112e460208501611272565b9150604084013590509250925092565b60006020828403121561130657600080fd5b6109b882611272565b6000806040838503121561132257600080fd5b61132b83611272565b91506020830135801515811461134057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561137757600080fd5b61138085611272565b935061138e60208601611272565b925060408501359150606085013567ffffffffffffffff808211156113b257600080fd5b818701915087601f8301126113c657600080fd5b8135818111156113d8576113d861134b565b604051601f8201601f19908116603f011681019083821181831017156114005761140061134b565b816040528281528a602084870101111561141957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561145057600080fd5b61145983611272565b915061146760208401611272565b90509250929050565b600181811c9082168061148457607f821691505b6020821081036114a457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526034908201527f4552433732315073693a207472616e736665722063616c6c6572206973206e6f6040820152731d081bdddb995c881b9bdc88185c1c1c9bdd995960621b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201611526576115266114fe565b5060010190565b6000835161153f8184602088016111f6565b8351908301906115538183602088016111f6565b01949350505050565b808201808211156102ea576102ea6114fe565b60208082526035908201527f4552433732315073693a207472616e7366657220746f206e6f6e20455243373260408201527418a932b1b2b4bb32b91034b6b83632b6b2b73a32b960591b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826115e9576115e96115c4565b500490565b818103818111156102ea576102ea6114fe565b600082611610576116106115c4565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061165e9083018461121a565b9695505050505050565b60006020828403121561167a57600080fd5b81516109b8816111c056fe0001020903110a19042112290b311a3905412245134d2a550c5d32651b6d3a7506264262237d468514804e8d2b95569d0d495ea533a966b11c886eb93bc176c9071727374353637324837e9b47af86c7155181ad4fd18ed32c9096db57d59ee30e2e4a6a5f92a6be3498aae067ddb2eb1d5989b56fd7baf33ca0c2ee77e5caf7ff0810182028303840444c545c646c7425617c847f8c949c48a4a8b087b8c0c816365272829aaec650acd0d28fdad4e22d6991bd97dfdcea58b4d6f29fede4f6fe0f1f2f3f4b5b6b607b8b93a3a7b7bf357199c5abcfd9e168bcdee9b3f1ecf5fd1e3e5a7a8aa2b670c4ced8bbe8f0f4fc3d79a1c3cde7effb78cce6facbf9f8a264697066735822122076eccb564997e924fe87529569fb9669591c0f3f4d7bded9a615b30813b6599964736f6c63430008110033";

type ERC721PsiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721PsiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Psi__factory extends ContractFactory {
  constructor(...args: ERC721PsiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Psi> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721Psi>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721Psi {
    return super.attach(address) as ERC721Psi;
  }
  override connect(signer: Signer): ERC721Psi__factory {
    return super.connect(signer) as ERC721Psi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721PsiInterface {
    return new utils.Interface(_abi) as ERC721PsiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Psi {
    return new Contract(address, _abi, signerOrProvider) as ERC721Psi;
  }
}
